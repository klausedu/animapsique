<?phprequire_once '../../config.php';require_once '../../includes/auth_paciente.php';require_once '../../includes/db.php';$page_title = 'Minhas Mensagens';require_once 'templates/header.php';// Marca as mensagens como lidas ao carregar a páginatry {    $pdo = conectar();    $stmt_update = $pdo->prepare("UPDATE mensagens_status SET lida = 1, data_leitura = NOW() WHERE usuario_id = ? AND tipo_usuario = 'paciente' AND lida = 0");    $stmt_update->execute([$paciente_id]);} catch (PDOException $e) {    error_log("Erro ao marcar mensagens como lidas: " . $e->getMessage());}?><div class="container mx-auto px-4 sm:px-6 lg:px-8">    <div class="bg-white rounded-lg shadow-md overflow-hidden">        <div class="flex flex-col h-[calc(100vh-200px)]">                        <div class="p-4 border-b bg-gray-50"><h2 class="text-lg font-semibold text-gray-800">Conversa com a Psicóloga</h2></div>            <!-- Histórico de Mensagens -->            <div id="chat-history" class="flex-grow p-6 overflow-y-auto space-y-6">                <!-- As mensagens serão carregadas aqui via JS -->            </div>            <!-- Formulário de Envio -->            <div class="p-4 bg-gray-100 border-t">                <h3 class="font-semibold text-gray-700 mb-2">Enviar Nova Mensagem</h3>                <form id="message-form">                    <div class="mb-2"><input type="text" name="assunto" id="assunto" required class="w-full rounded-md border-gray-300" placeholder="Assunto"></div>                    <div><textarea name="conteudo" id="conteudo" rows="3" required class="w-full rounded-md border-gray-300" placeholder="Digite sua mensagem..."></textarea></div>                    <div class="text-right mt-2"><button type="submit" class="inline-flex items-center rounded-md border bg-teal-600 px-4 py-2 text-sm font-medium text-white hover:bg-teal-700">Enviar</button></div>                </form>            </div>        </div>    </div></div><script>document.addEventListener('DOMContentLoaded', function () {    const chatHistory = document.getElementById('chat-history');    const messageForm = document.getElementById('message-form');    async function loadChatHistory() {        chatHistory.innerHTML = '<p class="text-gray-500 text-center">A carregar histórico...</p>';        try {            const response = await fetch('api_mensagens.php');            if (!response.ok) {                throw new Error(`HTTP error! status: ${response.status}`);            }            const mensagens = await response.json();                        chatHistory.innerHTML = ''; // Limpa o histórico            if (mensagens.length === 0) {                chatHistory.innerHTML = '<p class="text-gray-500 text-center">Nenhuma mensagem nesta conversa ainda.</p>';            } else {                mensagens.forEach(msg => appendMessage(msg));            }            scrollToBottom();        } catch (error) {            chatHistory.innerHTML = '<p class="text-red-500 text-center">Erro ao carregar o histórico. Tente recarregar a página.</p>';            console.error('Erro:', error);        }    }    function appendMessage(msg) {        const isPaciente = msg.remetente === 'paciente';        const dataMsg = new Date(msg.data_envio).toLocaleString('pt-PT');        const messageHTML = `            <div class="flex ${isPaciente ? 'justify-end' : 'justify-start'}">                <div class="max-w-lg">                    <div class="p-4 rounded-lg ${isPaciente ? 'bg-teal-100' : 'bg-gray-200'}">                        <p class="font-bold text-sm">${escapeHTML(msg.assunto)}</p>                        <p class="mt-1 text-sm">${escapeHTML(msg.conteudo).replace(/\n/g, '<br>')}</p>                    </div>                    <p class="text-xs text-gray-500 mt-1 px-2 ${isPaciente ? 'text-right' : 'text-left'}">${dataMsg}</p>                </div>            </div>        `;        chatHistory.insertAdjacentHTML('beforeend', messageHTML);    }    messageForm.addEventListener('submit', async function(e) {        e.preventDefault();        const formData = new FormData(messageForm);        try {            const response = await fetch('processa_mensagem_paciente.php', {                method: 'POST',                body: formData            });            const result = await response.json();            if (result.success) {                messageForm.reset();                loadChatHistory(); // Recarrega o histórico para mostrar a nova mensagem            } else {                alert('Erro ao enviar mensagem: ' + (result.message || 'Erro desconhecido'));            }        } catch (error) {            alert('Ocorreu um erro de comunicação.');            console.error('Erro:', error);        }    });    function scrollToBottom() {        chatHistory.scrollTop = chatHistory.scrollHeight;    }        function escapeHTML(str) {        return str.replace(/[&<>"']/g, match => ({ '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;' }[match]));    }    // Carrega o histórico assim que a página abre    loadChatHistory();});</script><?php require_once 'templates/footer.php'; ?>